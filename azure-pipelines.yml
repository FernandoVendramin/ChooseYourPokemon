# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

pool:
  vmImage: ubuntu-latest
variables:
  buildConfiguration: 'Release'
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'

steps:
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 5.x'
  inputs:
    versionSpec: 5.x

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: 'src/ChooseYourPokemon.sln'
    restoreDirectory: '$(System.DefaultWorkingDirectory)/package'

- task: XamarinAndroid@1
  displayName: 'Build Xamarin.Android'
  inputs:
    projectFile: 'src/app/ChooseYourPokemon.Android/ChooseYourPokemon.Android.csproj'
    outputDirectory: '$(build.binariesdirectory)/$(BuildConfiguration)/AndroidOutput'
    configuration: '$(BuildConfiguration)'
    msbuildVersionOption: '16.0'
    msbuildArchitectureOption: 'x64'
    jdkOption: 'JDKVersion'

- task: AndroidSigning@3
  displayName: 'Signing and aligning'
  inputs:
    apkFiles: '$(build.binariesdirectory)/$(BuildConfiguration)/AndroidOutput/*.aab'
    apksignerKeystoreFile: 'PokeDextra.keystore'
    apksignerKeystorePassword: '$(key_password)'
    apksignerKeystoreAlias: '$(key_alias)'
    apksignerKeyPassword: '$(key_password)'
    apksignerArguments: '--verbose  --min-sdk-version 21'

- task: DotNetCoreCLI@2
  displayName: 'Unit Test'
  inputs:
    command: test
    projects: 'src/ChooseYourPokemon.UnitTest/ChooseYourPokemon.UnitTest.csproj'

- task: NodeTool@0
  enabled: false
  displayName: 'Use Node 10.x.x'
  inputs:
    versionSpec: 10.x.x

- task: MSBuild@1
  enabled: false
  displayName: 'Build UITest'
  inputs:
    solution: 'src/ChooseYourPokemon.UITest/ChooseYourPokemon.UITest.csproj'
    msbuildArchitecture: x64
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/p:OutputPath=$(build.binariesdirectory)/uitests'

- task: AppCenterTest@1
  enabled: false
  displayName: 'Test with Visual Studio App Center'
  inputs:
    appFile: '$(build.binariesdirectory)/$(BuildConfiguration)/AndroidOutput/*.aab'
    artifactsDirectory: '$(Build.ArtifactStagingDirectory)/AppCenterTest'
    frameworkOption: 'uitest'
    uiTestBuildDirectory: '$(build.binariesdirectory)/uitests'
    uiTestToolsDirectory: '$(build.binariesdirectory)/uitests'
    credentialsOption: 'serviceEndpoint'
    serverEndpoint: 'AppCenterApiToken'
    appSlug: 'Anima-Tech-Week/Lab-Pokemon'
    devices: 'Anima-Tech-Week/validate-max-min'
    series: 'Demos'
    localeOption: 'en_US'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: android-artifact'
  inputs:
    PathtoPublish: '$(build.binariesdirectory)/$(BuildConfiguration)/AndroidOutput'
    ArtifactName: 'android-artifact'
  condition: succeededOrFailed()